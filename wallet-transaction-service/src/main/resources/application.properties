spring.application.name=wallet-transaction-service
server.port=8089
management.endpoints.web.exposure.include=*

#MONGODB CONFIG
spring.data.mongodb.database=db_wallets_transactions
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017

#Log
logging.level.com.bootcamp.java=Info
message.demo=leido desde local

#Spring Cloud Config
spring.config.import=optional:configserver:http://config-server:8888

webclient.baseurl=http://localhost:8080

eureka.client.serviceUrl.defaultZone= http://localhost:9091/eureka/
eureka.instance.preferIpAddress=true
eureka.instance.hostname=${COMPUTERNAME:localhost}

#circuitbreaker
circuitbreaker.instances.name=external-service
resilience4j.circuitbreaker.instances.external-service.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.external-service.minimumNumberOfCalls= 4
resilience4j.circuitbreaker.instances.external-service.slidingWindowType= COUNT_BASED
resilience4j.circuitbreaker.instances.external-service.slidingWindowSize= 8
resilience4j.circuitbreaker.instances.external-service.waitDurationInOpenState= 50s
resilience4j.circuitbreaker.instances.external-service.permittedNumberOfCallsInHalfOpenState= 3

# config kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup
kafka.topic.balance.name=balance-topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#to transfer consumer
kafka.topic.wallet.transaction.name=wallet-transaction-topic

#to send result to transfer
kafka.topic.wallet.transaction.result.name=wallet-transaction-topic-result


